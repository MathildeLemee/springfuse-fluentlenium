<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-jsf2-primefaces:src/main/webapp/WEB-INF/flows/edit/editFlow.e.vm.xml
-->
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">
    
	<persistence-context />

	<!-- ====================== -->
	<!-- Flow input parameters  -->
	<!-- ====================== -->
    <!-- * moreTypesDemo: the entity to edit/create -->
	<!-- * sub: when sub is true, we assume this flow is used as a subflow by a parent flow. -->
	<!-- * readonly: open the passed moreTypesDemo in read-only mode -->
    <input name="moreTypesDemo" required="true" value="flowScope.moreTypesDemo"/>
	<input name="sub" type="boolean" value="flowScope.sub"/>
	<input name="readonly" type="boolean" />

	<decision-state id="startChoice">
		<if test="sub" then="moreTypesDemoSubEdit" else="moreTypesDemoEdit" />
	</decision-state>
	<!-- ====================== -->
	<!-- EDIT -->
	<!-- ====================== -->
	<view-state id="moreTypesDemoEdit" model="moreTypesDemo" parent="#moreTypesDemoEditCommon">
        <on-render>
            <evaluate expression="flowsMenuHandler.updateMenu(flowRequestContext,moreTypesDemo.primaryKey,moreTypesDemoConverter.print(moreTypesDemo))" /> 
        </on-render>
    
        <!-- event handlers -->
        <transition on="send">
            <evaluate expression="messageUtil.info('status_submitted_ok')" />        
            <render fragments="form:messages"/>
        </transition>

		<transition on="save">
			<evaluate expression="moreTypesDemoService.save(flowScope.moreTypesDemo)" />
			<evaluate expression="messageUtil.info('status_saved_ok')" />
            <render fragments="form:messages,form:delete"/>
		</transition>

		<transition on="saveAndClose">
            <evaluate expression="moreTypesDemoService.save(flowScope.moreTypesDemo)" />
            <evaluate expression="primeFacesUtil.forceClose()"/>
            <render fragments="form:messages"/>        
        </transition>
        
		<transition on="close" validate="false" >
            <evaluate expression="primeFacesUtil.showAskForSaveDialog((moreTypesDemo != null and !moreTypesDemo.isPrimaryKeySet()) or persistenceContext.delegate.isDirty())"/>
        </transition>

		<transition on="quit" validate="false">
			<set name="conversationScope.endParam" value="'_cascadeQuit'" />
            <!--  TODO -->
            <evaluate expression="primeFacesUtil.showAskForSaveDialog((moreTypesDemo != null and !moreTypesDemo.isPrimaryKeySet()) or persistenceContext.delegate.isDirty())"/>            
		</transition>

        <!-- transitions -->
        <transition on="deleteAndClose" to="deleteAndClose" validate="false">
            <evaluate expression="moreTypesDemoService.delete(flowScope.moreTypesDemo)" />
        </transition>        
	</view-state>

	<!-- ====================== -->
	<!-- SUB-EDIT -->
	<!-- ====================== -->
	<view-state id="moreTypesDemoSubEdit" model="moreTypesDemo" parent="#moreTypesDemoEditCommon">
        <!-- events handlers -->
		<transition on="ok">
            <evaluate expression="primeFacesUtil.forceClose()"/>
            <render fragments="form:messages"/>        
        </transition>
        
        <!-- transitions -->        
        <transition on="cancel" to="cancelEdit" validate="false" />
	</view-state>

	<!-- ====================== -->
	<!-- COMMON-EDIT -->
	<!-- ====================== -->
	<view-state id="moreTypesDemoEditCommon" model="moreTypesDemo">
	</view-state>

	<!-- ========== -->
	<!-- END STATES -->
	<!-- ========== -->
	<end-state id="endEdit">
		<output name="moreTypesDemo" value="moreTypesDemo" />
	</end-state>
	<end-state id="cancelEdit" />
	<end-state id="deleteAndClose" />
	<end-state id="error" />

	<!-- ================== -->
	<!-- GLOBAL TRANSITIONS -->
	<!-- ================== -->
	<global-transitions>    
        <!-- events handlers -->
		<transition on="debugThrowException">
			<evaluate expression="exceptionUtil.throwRuntimeException()" />
		</transition>

        <!-- transitions -->
        <transition on="forceClose" to="endEdit" validate="false"/>
        <transition on="error" to="error" validate="false" />        
		<transition on-exception="java.lang.RuntimeException" to="error" />
	</global-transitions>
</flow>
