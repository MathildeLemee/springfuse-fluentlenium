<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ! (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-jsf2-primefaces:src/main/webapp/WEB-INF/flows/select/selectForm.e.vm.xhtml
-->
<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:c="http://java.sun.com/jsp/jstl/core"
  xmlns:f="http://java.sun.com/jsf/core" xmlns:h="http://java.sun.com/jsf/html" 
  xmlns:p="http://primefaces.org/ui"
  xmlns:app="http://springfuse.jaxio.com/app"
  xmlns:appcc="http://java.sun.com/jsf/composite/components">
  <app:search data="#{books}" legend="${msg.book} ${msg.search_criteria}">
    <ui:define name="filters">
      	<f:validateBean disabled="true">      
        <h:panelGrid columns="2">
        <h:outputLabel for="account" value="${msg.book_account}" />
        <h:selectOneMenu id="account"
			value="#{bookSearchForm.book.account}"
          	converter="#{accountConverter}">
          	<f:selectItem itemValue="" itemLabel="-- Select One" />
			<f:selectItems value="#{accountService.find()}" var="item" itemLabel="#{accountConverter.print(item)}" />
        </h:selectOneMenu>

		<h:outputLabel for="title" value="${msg.book_title}" />
		<p:inputText id="title" value="#{bookSearchForm.book.title}" maxlength="80" />

	</h:panelGrid>
	</f:validateBean>	
    </ui:define>

    <ui:define name="result">
		<p:column id="book_account" headerText="${msg.book_account}" width="30%">
      		<h:outputText value="#{accountConverter.print(item.account)}" />
		</p:column>
      	<p:column id="book_title" headerText="${msg.book_title}" sortBy="#{item.title}" width="30%">
      		<h:outputText value="#{item.title}" />
		</p:column>
      	<p:column id="book_numberOfPages" headerText="${msg.book_numberOfPages}" sortBy="#{item.numberOfPages}" width="30%">
      		<h:outputText value="#{item.numberOfPages}" />
		</p:column>
		<p:column id="open" headerText="${msg.actions}" width="10%">
			<c:if test="#{not empty select and select}">
				<app:iconSelect action="select">
					<f:setPropertyActionListener value="#{item}" target="#{books.selectedRow}" />				
				</app:iconSelect>
			</c:if>
			<c:if test="#{empty select or not select}">
				<app:iconEdit action="select">
					<f:setPropertyActionListener value="#{item}" target="#{books.selectedRow}" />		
				</app:iconEdit>
			</c:if>
		</p:column>
    </ui:define>
  </app:search>
</ui:composition>
