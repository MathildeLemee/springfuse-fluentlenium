/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/main/java/project/domain/Entity.e.vm.java
 */
package com.yourcompany.yourproject.domain;

import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

@Entity
@Table(name = "LEGACY", uniqueConstraints = { @UniqueConstraint(columnNames = { "NAME", "CODE", "DEPT" }) })
@Cache(usage = NONSTRICT_READ_WRITE)
public class Legacy implements Identifiable<LegacyPk>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger logger = Logger.getLogger(Legacy.class);

    // Composite primary key
    private LegacyPk legacyPk = new LegacyPk();

    // Raw attributes
    private String extraInfo; // not null

    // ---------------------------
    // Constructors
    // ---------------------------

    public Legacy() {
    }

    public Legacy(LegacyPk primaryKey) {
        setPrimaryKey(primaryKey);
    }

    // ---------------------------
    // Identifiable implementation
    // ---------------------------

    @Transient
    @XmlTransient
    public LegacyPk getPrimaryKey() {
        return getLegacyPk();
    }

    public void setPrimaryKey(LegacyPk legacyPk) {
        setLegacyPk(legacyPk);
    }

    @Transient
    @XmlTransient
    public boolean isPrimaryKeySet() {
        return isLegacyPkSet();
    }

    // -----------------------
    // Composite Primary Key
    // -----------------------

    /**
     * Returns the composite primary key.
     */
    @EmbeddedId
    public LegacyPk getLegacyPk() {
        return legacyPk;
    }

    /**
     * Set the composite primary key.
     * @param legacyPk the composite primary key.
     */
    public void setLegacyPk(LegacyPk legacyPk) {
        this.legacyPk = legacyPk;
    }

    /**
     * Tells whether or not this instance has a non empty composite primary key set.
     * @return true if a non empty primary key is set, false otherwise
     */
    @Transient
    @XmlTransient
    public boolean isLegacyPkSet() {
        return getLegacyPk() != null && getLegacyPk().isLegacyPkSet();
    }

    /**
     * Helper method to set directly the code into the LegacyPk corresponding field.
     * todo document $pkAttribute.comment
     * @param code the code
     */
    public void setCode(String code) {
        if (getLegacyPk() == null) {
            setLegacyPk(new LegacyPk());
        }

        getLegacyPk().setCode(code);
    }

    /**
     * Helper method to get directly the code from the entity.root.primaryKey.type corresponding field.
     * @return the code
     */
    @Transient
    @XmlTransient
    @NotEmpty
    @Length(max = 8)
    public String getCode() {
        return getLegacyPk() != null ? getLegacyPk().getCode() : null;
    }

    /**
     * Helper method to set directly the dept into the LegacyPk corresponding field.
     * todo document $pkAttribute.comment
     * @param dept the dept
     */
    public void setDept(Integer dept) {
        if (getLegacyPk() == null) {
            setLegacyPk(new LegacyPk());
        }

        getLegacyPk().setDept(dept);
    }

    /**
     * Helper method to get directly the dept from the entity.root.primaryKey.type corresponding field.
     * @return the dept
     */
    @Transient
    @XmlTransient
    @NotNull
    public Integer getDept() {
        return getLegacyPk() != null ? getLegacyPk().getDept() : null;
    }

    /**
     * Helper method to set directly the name into the LegacyPk corresponding field.
     * todo document $pkAttribute.comment
     * @param name the name
     */
    public void setName(String name) {
        if (getLegacyPk() == null) {
            setLegacyPk(new LegacyPk());
        }

        getLegacyPk().setName(name);
    }

    /**
     * Helper method to get directly the name from the entity.root.primaryKey.type corresponding field.
     * @return the name
     */
    @Transient
    @XmlTransient
    @NotEmpty
    @Length(max = 16)
    public String getName() {
        return getLegacyPk() != null ? getLegacyPk().getName() : null;
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------

    // -- [extraInfo] ------------------------

    @NotEmpty
    @Length(max = 255)
    @Column(name = "EXTRA_INFO", nullable = false)
    public String getExtraInfo() {
        return extraInfo;
    }

    public void setExtraInfo(String extraInfo) {
        this.extraInfo = extraInfo;
    }

    // -----------------------------------------
    // Set defaults values
    // -----------------------------------------

    /**
     * Set the default values.
     */
    public void initDefaultValues() {
    }

    // -----------------------------------------
    // equals and hashCode
    // -----------------------------------------

    // The first time equals or hashCode is called,
    // we check if the primary key is present or not.
    // If yes: we use it in equals/hashCode
    // If no: we use a VMID during the entire life of this
    // instance even if later on this instance is assigned
    // a primary key.

    @Override
    public boolean equals(Object legacy) {
        if (this == legacy) {
            return true;
        }

        if (!(legacy instanceof Legacy)) {
            return false;
        }

        Legacy other = (Legacy) legacy;
        return _getUid().equals(other._getUid());
    }

    @Override
    public int hashCode() {
        return _getUid().hashCode();
    }

    private Object _uid;

    private Object _getUid() {
        if (_uid == null) {
            if (isPrimaryKeySet()) {
                _uid = getPrimaryKey();
            } else {
                _uid = new java.rmi.dgc.VMID();
                logger
                        .warn("DEVELOPER: hashCode has changed!."
                                + "If you encounter this message you should take the time to carefuly review equals/hashCode for: "
                                + getClass().getCanonicalName());
            }
        }
        return _uid;
    }

    // -----------------------------------------
    // toString
    // -----------------------------------------

    /**
     * Construct a readable string representation for this Legacy instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        StringBuilder result = new StringBuilder();
        result.append("legacy.extraInfo=[").append(getExtraInfo()).append("]\n");
        return result.toString();
    }
}