/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/main/java/project/domain/Entity.e.vm.java
 */
package com.yourcompany.yourproject.domain;

import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

@Entity
@Table(name = "ADDRESS")
@Cache(usage = NONSTRICT_READ_WRITE)
public class Address implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger logger = Logger.getLogger(Address.class);

    // Raw attributes
    private Integer addressId; // pk
    private String streetName;
    private String city; // not null
    private Integer version;

    // ---------------------------
    // Constructors
    // ---------------------------

    public Address() {
    }

    public Address(Integer primaryKey) {
        setPrimaryKey(primaryKey);
    }

    // ---------------------------
    // Identifiable implementation
    // ---------------------------

    @Transient
    @XmlTransient
    public Integer getPrimaryKey() {
        return getAddressId();
    }

    public void setPrimaryKey(Integer addressId) {
        setAddressId(addressId);
    }

    @Transient
    @XmlTransient
    public boolean isPrimaryKeySet() {
        return isAddressIdSet();
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------

    // -- [addressId] ------------------------

    @Column(name = "ADDRESS_ID", nullable = false, unique = true, precision = 10)
    @GeneratedValue
    @Id
    public Integer getAddressId() {
        return addressId;
    }

    public void setAddressId(Integer addressId) {
        this.addressId = addressId;
    }

    @Transient
    public boolean isAddressIdSet() {
        return addressId != null;
    }

    // -- [streetName] ------------------------

    @Length(max = 255)
    @Column(name = "STREET_NAME")
    public String getStreetName() {
        return streetName;
    }

    public void setStreetName(String streetName) {
        this.streetName = streetName;
    }

    // -- [city] ------------------------

    @NotEmpty
    @Length(max = 255)
    @Column(name = "CITY", nullable = false)
    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    // -- [version] ------------------------

    @Column(name = "VERSION", precision = 10)
    @Version
    public Integer getVersion() {
        return version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    // -----------------------------------------
    // Set defaults values
    // -----------------------------------------

    /**
     * Set the default values.
     */
    public void initDefaultValues() {
    }

    // -----------------------------------------
    // equals and hashCode
    // -----------------------------------------

    // The first time equals or hashCode is called,
    // we check if the primary key is present or not.
    // If yes: we use it in equals/hashCode
    // If no: we use a VMID during the entire life of this
    // instance even if later on this instance is assigned
    // a primary key.

    @Override
    public boolean equals(Object address) {
        if (this == address) {
            return true;
        }

        if (!(address instanceof Address)) {
            return false;
        }

        Address other = (Address) address;
        return _getUid().equals(other._getUid());
    }

    @Override
    public int hashCode() {
        return _getUid().hashCode();
    }

    private Object _uid;

    private Object _getUid() {
        if (_uid == null) {
            if (isPrimaryKeySet()) {
                _uid = getPrimaryKey();
            } else {
                _uid = new java.rmi.dgc.VMID();
                logger
                        .warn("DEVELOPER: hashCode has changed!."
                                + "If you encounter this message you should take the time to carefuly review equals/hashCode for: "
                                + getClass().getCanonicalName());
            }
        }
        return _uid;
    }

    // -----------------------------------------
    // toString
    // -----------------------------------------

    /**
     * Construct a readable string representation for this Address instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        StringBuilder result = new StringBuilder();
        result.append("address.addressId=[").append(getAddressId()).append("]\n");
        result.append("address.streetName=[").append(getStreetName()).append("]\n");
        result.append("address.city=[").append(getCity()).append("]\n");
        result.append("address.version=[").append(getVersion()).append("]\n");
        return result.toString();
    }
}