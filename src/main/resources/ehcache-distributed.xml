<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-backend:src/main/resources/ehcache-distributed.p.vm.xml
-->
<ehcache>
	<!-- see ehcache/ehcache.xml for local caching -->

	<!-- Sets the path to the directory where cache .data files are created.

		If the path is a Java System Property it is replaced by
		its value in the running VM.

		The following properties are translated:
		user.home - User's home directory
		user.dir - User's current working directory
		java.io.tmpdir - Default temp file path -->

	<diskStore path="java.io.tmpdir" />

	<!--
		for automatic peer discovery see http://ehcache.sourceforge.net/EhcacheUserGuide.html#id.s20.2.1
		for manual peer discovery see  http://ehcache.sourceforge.net/EhcacheUserGuide.html#id.s20.2.2

		!! please note that timeToLive has a specific meaning with multicast adresses
	-->
	<cacheManagerPeerProviderFactory
		class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory"
		properties="peerDiscovery=automatic, multicastGroupAddress=230.0.0.1, multicastGroupPort=4446, timeToLive=1" />

	<cacheManagerPeerListenerFactory class="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory" />

	<!--
		Default Cache configuration. These will applied to caches programmatically created through
		the CacheManager.

		The following attributes are required for defaultCache:

		maxInMemory	   - Sets the maximum number of objects that will be created in memory
		eternal		   - Sets whether elements are eternal. If eternal,  timeouts are ignored and the element
		is never expired.
		timeToIdleSeconds - Sets the time to idle for an element before it expires.
		i.e. The maximum amount of time between accesses before an element expires
		Is only used if the element is not eternal.
		Optional attribute. A value of 0 means that an Element can idle for infinity
		timeToLiveSeconds - Sets the time to live for an element before it expires.
		i.e. The maximum time between creation time and when an element expires.
		Is only used if the element is not eternal.
		Optional attribute. A value of 0 means that and Element can live for infinity
		overflowToDisk	- Sets whether elements can overflow to disk when the in-memory cache
		has reached the maxInMemory limit.
	-->

	<defaultCache
		maxElementsInMemory="20000"
		eternal="false"
		timeToIdleSeconds="6000"
		timeToLiveSeconds="6000"
		overflowToDisk="false"
		memoryStoreEvictionPolicy="LFU">
	</defaultCache>

	<cache  name="org.hibernate.cache.StandardQueryCache"
		maxElementsInMemory="10000"
		eternal="false"
		timeToIdleSeconds="86400"
		timeToLiveSeconds="86400"
		overflowToDisk="false"
		memoryStoreEvictionPolicy="LFU">
		<cacheEventListenerFactory
			class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"
			properties="replicateAsynchronously=true,replicatePuts=false,replicateUpdates=true,replicateUpdatesViaCopy=false,replicateRemovals=true" />
	</cache>

	<!-- mandatory if you want to distribute the query cache -->
	<cache  name="org.hibernate.cache.UpdateTimestampsCache"
		maxElementsInMemory="400000"
		eternal="true"
		overflowToDisk="false"
		memoryStoreEvictionPolicy="LFU">
		<!-- please note the mandatory replicateUpdatesViaCopy=true -->
		<cacheEventListenerFactory
			class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"
			properties="replicateAsynchronously=true,replicatePuts=true,replicateUpdates=true,replicateUpdatesViaCopy=true,replicateRemovals=true" />
	</cache>

	<!--
		You can override cache configuration given a cache name the following way:

		!! If you choose to distribute a specific entity please remember to distribute also the collection that contains such entities too !!

		The following cache may be used

		# hibernate related
		org.hibernate.cache.StandardQueryCache
		org.hibernate.cache.UpdateTimestampsCache

		# database related
		com.yourcompany.yourproject.domain.Account
		com.yourcompany.yourproject.domain.Book.books
		com.yourcompany.yourproject.domain.Document.documents
		com.yourcompany.yourproject.domain.Account.roles

		com.yourcompany.yourproject.domain.Address

		com.yourcompany.yourproject.domain.Book

		com.yourcompany.yourproject.domain.ContactInfo

		com.yourcompany.yourproject.domain.Document

		com.yourcompany.yourproject.domain.Legacy

		com.yourcompany.yourproject.domain.more.MoreTypesDemo

		com.yourcompany.yourproject.domain.Role

	-->
</ehcache>
